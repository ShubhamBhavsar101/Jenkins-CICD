pipeline {
  // Testing
    agent any
    
    tools {
        // jdk 'JDK-17'
        maven 'Maven3'
    }

    triggers {
        githubPush()
    }

    environment {
    	SONARQUBE_ENV = 'Sonarqube'
    	DOCKER_IMAGE = "shubhszone/av-jenkins-cicd:${BUILD_NUMBER}"
    	REGISTRY_CREDENTIALS = credentials('docker-cred')
     }
    stages {
    stage('Build') {
      steps {
        // build the project and create a JAR file
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('SonarQube Analysis') {
        steps {
            withSonarQubeEnv("${env.SONARQUBE_ENV}") {
                sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.host.url=http://localhost:9000'
            }
        }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
            sh 'id && ls -l /var/run/docker.sock'
            sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
   	stage('Update Deployment File') {
		environment {
			GIT_REPO_NAME = "AV-Jenkins-CICD"
			GIT_USER_NAME = "ShubhamBhavsar101"
		}
		steps {
			withCredentials([string(credentialsId: 'Github-PAT', variable: 'GITHUB_TOKEN')]) {
        sh """
					git config --global --add safe.directory /var/lib/jenkins/workspace/AV-Jenkins-CICD
          git status

					git config user.email 'shubhamcbhavsar198@gmail.com'
					git config user.name 'Shubham Bhavsar'
                    
          cp spring-boot-app-manifests/deployment.yml.template spring-boot-app-manifests/deployment.yml
					sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml

					git add spring-boot-app-manifests/deployment.yml
					git commit -m "Update deployment image to version ${BUILD_NUMBER}"
					git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
				"""
			}
		}
	}
  }
}
